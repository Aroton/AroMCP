name: "analyze:dependencies"
description: "Analyze npm dependencies"
version: "1.0.0"

default_state:
  state:
    package_json: ""
    npm_list: ""

state_schema:
  state:
    package_json: string
    npm_list: string

  computed:
    dependencies:
      from: "this.package_json"
      transform: |
        JSON.parse(input).dependencies || {}

    outdated_deps:
      from: "this.npm_list"
      transform: |
        input.split('\n')
          .filter(line => line.includes('outdated'))
          .map(line => {
            const parts = line.split(/\s+/);
            return {
              name: parts[0],
              current: parts[1],
              wanted: parts[2],
              latest: parts[3]
            };
          })

    security_risks:
      from: ["this.outdated_deps", "this.dependencies"]
      transform: |
        input[0].filter(dep => {
          const current = input[1][dep.name];
          return current && dep.latest.split('.')[0] > current.split('.')[0];
        })

steps:
  - id: "read_package"
    type: "shell_command"
    command: "cat package.json"
    state_update:
      path: "this.package_json"
      value: "stdout"

  - id: "check_outdated"
    type: "shell_command"
    command: "npm outdated --json || true"
    state_update:
      path: "this.npm_list"
      value: "stdout"

  - id: "report"
    type: "user_message"
    message: |
      Found {{ this.outdated_deps.length }} outdated dependencies
      Major version updates needed: {{ this.security_risks.length }}